#  Make the field unable to read
directive @hidden on FIELD_DEFINITION

# Count the occurence of the field given in arg (should be list).
# Dgraph use <type>Aggreage instead (much faster).
directive @count(f: String!) on FIELD_DEFINITION

# Use for DQL requests.
directive @meta(f: String!, k: String!) on FIELD_DEFINITION

# Return true if the user is a authorized validator for the given contract.
directive @isContractValidator on FIELD_DEFINITION

###########################################################
# Directive code for input type:
# add_* => apply on Add mutation
# patch_* => apply on Update mutation
# alter_* => apply on all mutation input (add and update)
###########################################################

# Lower the field value.
directive @alter_toLower on INPUT_FIELD_DEFINITION

# Control the field value length (string).
directive @alter_minLength(n: Int!) on INPUT_FIELD_DEFINITION
directive @alter_maxLength(n: Int!) on INPUT_FIELD_DEFINITION

# Ensure the field value (list) as only one element.
directive @alter_oneByOne on INPUT_FIELD_DEFINITION

# Ensure the field value is unique. 
# If on is given, it check the uniqueness on a subset of the parent type.
directive @alter_unique(on: String) on INPUT_FIELD_DEFINITION

# Authorize only if the field's value match the user(u) credential.
# If user(u) field is empty, assume a user object.
directive @add_isOwner(u: String) on INPUT_FIELD_DEFINITION
directive @patch_isOwner(u: String) on INPUT_FIELD_DEFINITION

# Read-only directives
directive @patch_RO on INPUT_FIELD_DEFINITION # for field defined at creation
directive @alter_RO on INPUT_FIELD_DEFINITION 

#######################################################
# @TODO: automate their generation in gqlast.py

# Hook directive for mutation
# Gqlast automatically append hook in Dgraph Type, as:
#   addNode(input: [AddNodeInput!]! @hook_addNodeInput): AddNodePayload @hook_addNode

# Node Hook
directive @hook_getNodeInput on ARGUMENT_DEFINITION
directive @hook_queryNodeInput on ARGUMENT_DEFINITION
directive @hook_addNodeInput on ARGUMENT_DEFINITION
directive @hook_updateNodeInput on ARGUMENT_DEFINITION
directive @hook_deleteNodeInput on ARGUMENT_DEFINITION
directive @hook_addNode on FIELD_DEFINITION
directive @hook_updateNode on FIELD_DEFINITION
directive @hook_deleteNode on FIELD_DEFINITION
# Tension Hook
directive @hook_getTensionInput on ARGUMENT_DEFINITION
directive @hook_queryTensionInput on ARGUMENT_DEFINITION
directive @hook_addTensionInput on ARGUMENT_DEFINITION
directive @hook_updateTensionInput on ARGUMENT_DEFINITION
directive @hook_deleteTensionInput on ARGUMENT_DEFINITION
directive @hook_addTension on FIELD_DEFINITION
directive @hook_updateTension on FIELD_DEFINITION
directive @hook_deleteTension on FIELD_DEFINITION
# Comment Hook
directive @hook_getCommentInput on ARGUMENT_DEFINITION
directive @hook_queryCommentInput on ARGUMENT_DEFINITION
directive @hook_addCommentInput on ARGUMENT_DEFINITION
directive @hook_updateCommentInput on ARGUMENT_DEFINITION
directive @hook_deleteCommentInput on ARGUMENT_DEFINITION
directive @hook_addComment on FIELD_DEFINITION
directive @hook_updateComment on FIELD_DEFINITION
directive @hook_deleteComment on FIELD_DEFINITION
# Label Hook
directive @hook_getLabelInput on ARGUMENT_DEFINITION
directive @hook_queryLabelInput on ARGUMENT_DEFINITION
directive @hook_addLabelInput on ARGUMENT_DEFINITION
directive @hook_updateLabelInput on ARGUMENT_DEFINITION
directive @hook_deleteLabelInput on ARGUMENT_DEFINITION
directive @hook_addLabel on FIELD_DEFINITION
directive @hook_updateLabel on FIELD_DEFINITION
directive @hook_deleteLabel on FIELD_DEFINITION
# Contract Hook
directive @hook_getContractInput on ARGUMENT_DEFINITION
directive @hook_queryContractInput on ARGUMENT_DEFINITION
directive @hook_addContractInput on ARGUMENT_DEFINITION
directive @hook_updateContractInput on ARGUMENT_DEFINITION
directive @hook_deleteContractInput on ARGUMENT_DEFINITION
directive @hook_addContract on FIELD_DEFINITION
directive @hook_updateContract on FIELD_DEFINITION
directive @hook_deleteContract on FIELD_DEFINITION
# Vote Hook
directive @hook_getVoteInput on ARGUMENT_DEFINITION
directive @hook_queryVoteInput on ARGUMENT_DEFINITION
directive @hook_addVoteInput on ARGUMENT_DEFINITION
directive @hook_updateVoteInput on ARGUMENT_DEFINITION
directive @hook_deleteVoteInput on ARGUMENT_DEFINITION
directive @hook_addVote on FIELD_DEFINITION
directive @hook_updateVote on FIELD_DEFINITION
directive @hook_deleteVote on FIELD_DEFINITION
